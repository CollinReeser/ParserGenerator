Grammar :: Rule + ;

Rule :: RuleName #"::" ^PrunedElevatedNormal + #";" ;

PrunedElevatedNormal :: Normal
                      | ParenWithOp
                      | Pruned
                      | Elevated
                      ;
Paren :: #"(" ^PrunedElevatedNormal* #")";
Pruned :: #"#" RuleSegment ;
Elevated :: #"^" RuleNameWithOp ;
Normal :: OrChain
        | RuleSegment
        ;

PrunedPlain :: #"#" ^TerminalOrRulename ;
ElevatedPlain :: #"^" RuleName ;
OrChainNormal :: RuleName
               | Terminal
               ;
TerminalOrRulename :: Terminal
                    | RuleName
                    ;

PrunedElevatedForChain :: PrunedPlain
                        | ElevatedPlain
                        | OrChainNormal
                        | Paren
                        ;

RuleSegment :: ParenWithOp
             | RuleNameWithOp
             | TerminalWithOp
             ;

RuleNameWithOp :: RuleName UnaryOperator ?;

TerminalWithOp :: Terminal UnaryOperator ?;

ParenWithOp :: Paren UnaryOperator ?;

OrChain :: ^PrunedElevatedForChain #"|" ^PrunedElevatedForChain (#"|" ^PrunedElevatedForChain)*;

OrChainExtra :: #"|" ^PrunedElevatedForChain;

UnaryOperator :: "*"
               | "+"
               | "?";

Terminal :: TerminalLiteral
          | TerminalRegex ;

TerminalLiteral :: /"(?:\\.|[^"\\])*"/ ;

TerminalRegex :: /\/(?:\\.|[^\/\\])*\// ;

RuleName :: /[a-zA-Z_][a-zA-Z0-9_]*/ ;
